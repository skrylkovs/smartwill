const { ethers } = require("hardhat");

async function main() {
    console.log("üöÄ –î–µ–ø–ª–æ–∏–º –µ–¥–∏–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É SmartWillFactory –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ–ø–ª–æ–µ—Ä–∞
    const [deployer] = await ethers.getSigners();
    console.log("üìù –î–µ–ø–ª–æ–µ—Ä:", deployer.address);
    console.log("üí∞ –ë–∞–ª–∞–Ω—Å –¥–µ–ø–ª–æ–µ—Ä–∞:", ethers.formatEther(await deployer.provider.getBalance(deployer.address)), "ETH");
    
    // –î–µ–ø–ª–æ–∏–º —Ñ–∞–±—Ä–∏–∫—É
    const SmartWillFactory = await ethers.getContractFactory("SmartWillFactory");
    console.log("‚è≥ –î–µ–ø–ª–æ–π–∏–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç...");
    
    const factory = await SmartWillFactory.deploy();
    await factory.waitForDeployment();
    
    const factoryAddress = await factory.getAddress();
    console.log("‚úÖ SmartWillFactory –∑–∞–¥–µ–ø–ª–æ–µ–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:", factoryAddress);
    
    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log("\nüìã –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:");
    console.log("=========================================");
    console.log("–í —Ñ–∞–π–ª–µ smart-will-ui/src/App.tsx –∑–∞–º–µ–Ω–∏—Ç–µ:");
    console.log(`FACTORY_ADDRESS: "${factoryAddress}"`);
    console.log("=========================================\n");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω
    try {
        const deployedWills = await factory.getDeployedWills();
        console.log("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω. –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—â–∞–Ω–∏–π:", deployedWills.length);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", error.message);
    }
    
    // –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫–∏ –¥–ª—è Arbiscan
    const network = await deployer.provider.getNetwork();
    if (network.chainId === 421614n) { // Arbitrum Sepolia
        console.log("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ Arbiscan Sepolia:");
        console.log(`https://sepolia.arbiscan.io/address/${factoryAddress}`);
    } else if (network.chainId === 42161n) { // Arbitrum Mainnet  
        console.log("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ Arbiscan:");
        console.log(`https://arbiscan.io/address/${factoryAddress}`);
    }
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è:", error);
        process.exit(1);
    }); 